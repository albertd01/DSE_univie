
package Server.soap;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "BankingService", targetNamespace = "Server.soap", wsdlLocation = "file:/D:/SS24/DistributedSystemsEngineering/jaxws-ri/bin/dse.wsdl")
public class BankingService
    extends Service
{

    private final static URL BANKINGSERVICE_WSDL_LOCATION;
    private final static WebServiceException BANKINGSERVICE_EXCEPTION;
    private final static QName BANKINGSERVICE_QNAME = new QName("Server.soap", "BankingService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/D:/SS24/DistributedSystemsEngineering/jaxws-ri/bin/dse.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        BANKINGSERVICE_WSDL_LOCATION = url;
        BANKINGSERVICE_EXCEPTION = e;
    }

    public BankingService() {
        super(__getWsdlLocation(), BANKINGSERVICE_QNAME);
    }

    public BankingService(WebServiceFeature... features) {
        super(__getWsdlLocation(), BANKINGSERVICE_QNAME, features);
    }

    public BankingService(URL wsdlLocation) {
        super(wsdlLocation, BANKINGSERVICE_QNAME);
    }

    public BankingService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, BANKINGSERVICE_QNAME, features);
    }

    public BankingService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BankingService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns BankingServicePortType
     */
    @WebEndpoint(name = "BankingServicePort")
    public BankingServicePortType getBankingServicePort() {
        return super.getPort(new QName("Server.soap", "BankingServicePort"), BankingServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BankingServicePortType
     */
    @WebEndpoint(name = "BankingServicePort")
    public BankingServicePortType getBankingServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("Server.soap", "BankingServicePort"), BankingServicePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (BANKINGSERVICE_EXCEPTION!= null) {
            throw BANKINGSERVICE_EXCEPTION;
        }
        return BANKINGSERVICE_WSDL_LOCATION;
    }

}
