openapi: 3.0.3
info:
  title: Meeting Scheduler API
  description: API for scheduling and managing meeting polls.
  version: 1.0.0
servers:
  - url: http://localhost:8080/rest/pt6
paths:
  /meetings:
    post:
      summary: Create a new meeting poll
      operationId: createMeeting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingCreationRequest'
      responses:
        '201':
          description: Meeting created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
  /meetings/{meetingId}:
    get:
      summary: Get meeting details
      operationId: getMeeting
      parameters:
        - name: meetingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Meeting details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
    put:
      summary: Update a meeting poll
      operationId: updateMeeting
      parameters:
        - name: meetingId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingUpdateRequest'
      responses:
        '200':
          description: Meeting updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
    delete:
      summary: Delete a meeting poll
      operationId: deleteMeeting
      parameters:
        - name: meetingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Meeting deleted successfully
  /meetings/{meetingId}/timeslots:
    post:
      summary: Add time slots to a meeting poll
      operationId: addTimeSlots
      parameters:
        - name: meetingId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeSlotRequest'
      responses:
        '200':
          description: Time slots added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
  /meetings/{meetingId}/timeslots/{timeSlotId}:
    delete:
      summary: Remove a time slot from a meeting poll
      operationId: removeTimeSlot
      parameters:
        - name: meetingId
          in: path
          required: true
          schema:
            type: string
        - name: timeSlotId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Time slot removed successfully
  /meetings/{meetingId}/publish:
    post:
      summary: Publish a meeting poll
      operationId: publishMeeting
      parameters:
        - name: meetingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Meeting poll published successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
  /meetings/{meetingId}/responses:
    post:
      summary: Submit responses to a meeting poll
      operationId: submitResponses
      parameters:
        - name: meetingId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingResponse'
      responses:
        '200':
          description: Responses submitted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meeting'
  /meetings/{meetingId}/export:
    get:
      summary: Export meeting responses
      operationId: exportResponses
      parameters:
        - name: meetingId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Meeting responses exported successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingExport'
components:
  schemas:
    MeetingCreationRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        creator:
          type: string
        timeSlots:
          type: array
          items:
            $ref: '#/components/schemas/TimeSlot'
      required:
        - title
        - creator
    MeetingUpdateRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        timeSlots:
          type: array
          items:
            $ref: '#/components/schemas/TimeSlot'
    TimeSlotRequest:
      type: object
      properties:
        timeSlots:
          type: array
          items:
            $ref: '#/components/schemas/TimeSlot'
      required:
        - timeSlots
    TimeSlot:
      type: object
      properties:
        id:
          type: string
          format: uuid
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        availabilities:
          type: array
          items:
            $ref: '#/components/schemas/Availability'
    Availability:
      type: object
      properties:
        user:
          type: string
        availability:
          type: string
          $ref: '#/components/schemas/AvailabilityEnum'
    Meeting:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        creator:
          type: string
        timeSlots:
          type: array
          items:
            $ref: '#/components/schemas/TimeSlot'
        published:
          type: boolean
    MeetingResponse:
      type: object
      properties:
        name:
          type: string
        responses:
          type: array
          items:
            $ref: '#/components/schemas/TimeSlotResponse'
      required:
        - name
        - responses
    TimeSlotResponse:
      type: object
      properties:
        timeSlotId:
          type: string
        availability:
          type: string
          $ref: '#/components/schemas/AvailabilityEnum'
    MeetingExport:
      type: object
      properties:
        meetingId:
          type: string
        responses:
          type: array
          items:
            $ref: '#/components/schemas/MeetingResponse'
    AvailabilityEnum:
      type: string
      enum:
        - yes
        - no
        - maybe