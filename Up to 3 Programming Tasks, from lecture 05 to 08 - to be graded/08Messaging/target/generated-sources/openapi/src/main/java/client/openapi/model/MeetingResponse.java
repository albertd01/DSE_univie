/*
 * Meeting Scheduler API
 * API for scheduling and managing meeting polls.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package client.openapi.model;

import java.util.Objects;
import java.util.Arrays;
import client.openapi.model.TimeSlotResponse;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MeetingResponse
 */
@JsonPropertyOrder({
  MeetingResponse.JSON_PROPERTY_NAME,
  MeetingResponse.JSON_PROPERTY_RESPONSES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-15T07:59:45.588840900+02:00[Europe/Vienna]", comments = "Generator version: 7.5.0")
public class MeetingResponse {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_RESPONSES = "responses";
  private List<TimeSlotResponse> responses = new ArrayList<>();

  public MeetingResponse() {
  }

  public MeetingResponse name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public MeetingResponse responses(List<TimeSlotResponse> responses) {
    
    this.responses = responses;
    return this;
  }

  public MeetingResponse addResponsesItem(TimeSlotResponse responsesItem) {
    if (this.responses == null) {
      this.responses = new ArrayList<>();
    }
    this.responses.add(responsesItem);
    return this;
  }

   /**
   * Get responses
   * @return responses
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESPONSES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<TimeSlotResponse> getResponses() {
    return responses;
  }


  @JsonProperty(JSON_PROPERTY_RESPONSES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResponses(List<TimeSlotResponse> responses) {
    this.responses = responses;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MeetingResponse meetingResponse = (MeetingResponse) o;
    return Objects.equals(this.name, meetingResponse.name) &&
        Objects.equals(this.responses, meetingResponse.responses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, responses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MeetingResponse {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    responses: ").append(toIndentedString(responses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

