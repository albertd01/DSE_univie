/*
 * Meeting Scheduler API
 * API for scheduling and managing meeting polls.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package client.openapi.model;

import java.util.Objects;
import java.util.Arrays;
import client.openapi.model.Availability;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * TimeSlot
 */
@JsonPropertyOrder({
  TimeSlot.JSON_PROPERTY_ID,
  TimeSlot.JSON_PROPERTY_START,
  TimeSlot.JSON_PROPERTY_END,
  TimeSlot.JSON_PROPERTY_AVAILABILITIES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-06-15T07:59:45.588840900+02:00[Europe/Vienna]", comments = "Generator version: 7.5.0")
public class TimeSlot {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_START = "start";
  private OffsetDateTime start;

  public static final String JSON_PROPERTY_END = "end";
  private OffsetDateTime end;

  public static final String JSON_PROPERTY_AVAILABILITIES = "availabilities";
  private List<Availability> availabilities = new ArrayList<>();

  public TimeSlot() {
  }

  public TimeSlot id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public TimeSlot start(OffsetDateTime start) {
    
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getStart() {
    return start;
  }


  @JsonProperty(JSON_PROPERTY_START)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStart(OffsetDateTime start) {
    this.start = start;
  }


  public TimeSlot end(OffsetDateTime end) {
    
    this.end = end;
    return this;
  }

   /**
   * Get end
   * @return end
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getEnd() {
    return end;
  }


  @JsonProperty(JSON_PROPERTY_END)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setEnd(OffsetDateTime end) {
    this.end = end;
  }


  public TimeSlot availabilities(List<Availability> availabilities) {
    
    this.availabilities = availabilities;
    return this;
  }

  public TimeSlot addAvailabilitiesItem(Availability availabilitiesItem) {
    if (this.availabilities == null) {
      this.availabilities = new ArrayList<>();
    }
    this.availabilities.add(availabilitiesItem);
    return this;
  }

   /**
   * Get availabilities
   * @return availabilities
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABILITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<Availability> getAvailabilities() {
    return availabilities;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABILITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailabilities(List<Availability> availabilities) {
    this.availabilities = availabilities;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimeSlot timeSlot = (TimeSlot) o;
    return Objects.equals(this.id, timeSlot.id) &&
        Objects.equals(this.start, timeSlot.start) &&
        Objects.equals(this.end, timeSlot.end) &&
        Objects.equals(this.availabilities, timeSlot.availabilities);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, start, end, availabilities);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimeSlot {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    availabilities: ").append(toIndentedString(availabilities)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

